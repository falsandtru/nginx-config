# wordpress
location / {
    set $check "visitor:$server_port";
    if ($http_cookie ~* "wordpress_logged_in") {
        set $check "member:$server_port";
    }
    if ($check = "visitor:443") {
        return http://$host$request_uri;
    }
    if ($check = "member:80") {
        return https://$host$request_uri;
    }
    ModSecurityEnabled on;
    ModSecurityConfig /usr/local/mod_security/wp-default.conf;
 
    #fastcgi_cache start
    set $no_cache 0;
 
    if ($server_port = 443) {
        set $no_cache 1;
    }
 
    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
        set $no_cache 1;
    }
    #if ($query_string != "") {
    #    set $no_cache 1;
    #}
 
    # Don't cache uris containing the following segments
    if ($request_uri ~* "^/(wp-admin|xmlrpc.php|wp-(app|cron|login|mail).php|wp-[^\.]*.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
        set $no_cache 1;
    }
 
    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $no_cache 1;
    }
 
    #note location{] block is simple now as caching is done on nginx's end
    #location / {
    #    try_files $uri $uri/ /index.php?$args;
    #}
 
 
    expires 1h;
 
    if ( $upstream_cache_status != HIT ) {
        gzip  on;
    }
    if ( $upstream_cache_status = HIT ) {
        gzip  off;
    }
 
    fastcgi_no_cache      $no_cache;
    fastcgi_cache_bypass  $no_cache;
 
    proxy_no_cache        $no_cache;
    proxy_cache_bypass    $no_cache;
    proxy_pass            http://php;
}
location ~ ^/wp-admin/ {
    if ($server_port = 80) {
        return 301 https://$host$request_uri;
    }
    ModSecurityEnabled on;
    ModSecurityConfig /usr/local/mod_security/wp-admin.conf;
 
    if ( $upstream_cache_status != HIT ) {
        gzip  on;
    }
    if ( $upstream_cache_status = HIT ) {
        gzip  off;
    }
 
 
    fastcgi_no_cache      1;
    fastcgi_cache_bypass  1;
 
    proxy_no_cache        1;
    proxy_cache_bypass    1;
    proxy_pass            http://php;
}
location ~ ^/wp-login.php {
    if ($server_port = 80) {
        return 301 https://$host$request_uri;
    }
    ModSecurityEnabled on;
    ModSecurityConfig /usr/local/mod_security/wp-login.conf;
 
    if ( $upstream_cache_status != HIT ) {
        gzip  on;
    }
    if ( $upstream_cache_status = HIT ) {
        gzip  off;
    }
 
 
    fastcgi_no_cache      1;
    fastcgi_cache_bypass  1;
 
    proxy_no_cache        1;
    proxy_cache_bypass    1;
    proxy_pass            http://php;
}
location ~ ^/wp-(app|cron|mail|[^\.]+).php {
    ModSecurityEnabled on;
    ModSecurityConfig /usr/local/mod_security/wp-app.conf;
 
    if ( $upstream_cache_status != HIT ) {
        gzip  on;
    }
    if ( $upstream_cache_status = HIT ) {
        gzip  off;
    }
 
    set $no_cache 0;
    if ($request_method = POST) {
        set $no_cache 1;
    }
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $no_cache 1;
    }
 
 
    fastcgi_no_cache      $no_cache;
    fastcgi_cache_bypass  $no_cache;
 
    proxy_no_cache        $no_cache;
    proxy_cache_bypass    $no_cache;
    proxy_pass            http://php;
}
location ~ ^/(xmlrpc.php|feed/|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml) {
    ModSecurityEnabled on;
    ModSecurityConfig /usr/local/mod_security/wp-func.conf;
 
    if ( $upstream_cache_status != HIT ) {
        gzip  on;
    }
    if ( $upstream_cache_status = HIT ) {
        gzip  off;
    }
 
 
    fastcgi_no_cache      1;
    fastcgi_cache_bypass  1;
 
    proxy_no_cache        1;
    proxy_cache_bypass    1;
    proxy_pass            http://php;
}
